		AREA MYDATA, DATA, READONLY
			
			
;THE BASE ADDRESS OF RCC REGISTER			
A_RCC_BASE_ADDRESS_REG          EQU   0x40021000		
;THE REGISTER FOR ENABLE THE CLK FOR THE PORT
A_RCC_APB2ENR_ADDRESS_REG	      EQU   A_RCC_BASE_ADDRESS_REG + 0x18 


;PORTA REGISTERS
A_GPIO_PORTA_BASE_ADDRESS     EQU     0x40010800
A_GPIO_PORTA_CRL_ADDRESS_REG  EQU     A_GPIO_PORTA_BASE_ADDRESS+0x00
A_GPIO_PORTA_CRH_ADDRESS_REG  EQU     A_GPIO_PORTA_BASE_ADDRESS+0x04
A_GPIO_PORTA_ODR_ADDRESS_REG  EQU     A_GPIO_PORTA_BASE_ADDRESS+0x0C
A_GPIO_PORTA_IDR_ADDRESS_REG  EQU     A_GPIO_PORTA_BASE_ADDRESS+0x08




;PORTB REGISTERS
A_GPIO_PORTB_BASE_ADDRESS     EQU     0x40010C00
A_GPIO_PORTB_CRL_ADDRESS_REG  EQU     A_GPIO_PORTB_BASE_ADDRESS+0x00
A_GPIO_PORTB_CRH_ADDRESS_REG  EQU     A_GPIO_PORTB_BASE_ADDRESS+0x04
A_GPIO_PORTB_ODR_ADDRESS_REG  EQU     A_GPIO_PORTB_BASE_ADDRESS+0x0C
A_GPIO_PORTB_IDR_ADDRESS_REG  EQU     A_GPIO_PORTB_BASE_ADDRESS+0x08



;PORTC REGISTERS
A_GPIO_PORTC_BASE_ADDRESS     EQU      0x40011000
A_GPIO_PORTC_CRL_ADDRESS_REG  EQU     A_GPIO_PORTC_BASE_ADDRESS+0x00
A_GPIO_PORTC_CRH_ADDRESS_REG  EQU     A_GPIO_PORTC_BASE_ADDRESS+0x04
A_GPIO_PORTC_ODR_ADDRESS_REG  EQU     A_GPIO_PORTC_BASE_ADDRESS+0x0C
A_GPIO_PORTC_IDR_ADDRESS_REG  EQU     A_GPIO_PORTC_BASE_ADDRESS+0x08





;CONFIQURATIONS PREPROCESSING FOR PORTS
PORTA   EQU    0X04
PORTB   EQU    0X08
PORTC   EQU    0X10

;CONFIGURATION PREPROCESSING FOR PINS
PIN0    EQU    0X00
PIN1    EQU    0X01
PIN2    EQU    0X02
PIN3    EQU    0X03
PIN4    EQU    0X04
PIN5    EQU    0X05
PIN6    EQU    0X06
PIN7    EQU    0X07
	
	
PIN8     EQU    0X00
PIN9     EQU    0X04
PIN10    EQU    0X08
PIN11    EQU    0X0C
PIN12    EQU    0X10
PIN13    EQU    0X14
PIN14    EQU    0X18
PIN15    EQU    0X1C



PIN13_EANBLE EQU 13


;OUTPUT OR INPUT CONFIGURATION
OUTPUT  EQU    0X01
INPUT   EQU    0X08


;PINWRITE 

HIGH   EQU    0X01
LOW    EQU    0X00



INTERVAL EQU 0x566004



			
		AREA MYCODE, CODE, READONLY
	
	
	



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DESCRIPTION 	
; THIS FUNCTION IS SETUP THE WANTED PIN IN PORTB LOW
; TO USE THIS FUCTION CORRECTLY YOU HAVE TO SEND THE FOLLOWING
; 1- R1 ----> THE WANTED PIN FORM THE DEFINITION 
;    YOU NEED TO CHEK THE BLUEBILL DATA SHEET IF THIS PIN IS AVALIABLE OR NOT 
;    AS NOT ALL THE PORTS HAVE THE SAME PINS AND NOT ALL PORTS HAVE PINS FROM 0 TO 15
; 2- R2 ----> THE DIRECTION OF THE OF THE PIN WHETER IS OUTPUT OR INPUT
; IN THIS FUNCTION I AM GOING TO USE R5, R6, R7 AND R8


GPIO_PORTA_CONGIGURATION     FUNCTION
	
	PUSH{R5-R8,LR}

;ENABLE THE CLK FOR THE  PORTB
	LDR  R5, =A_RCC_APB2ENR_ADDRESS_REG ;LOAD THE ADDRESS OF THE RCC IN R5
	LDR  R6, [R5]                     ; PUT THE VALUE IN RCC REGISTER IN R6
	ORR  R6, #PORTA 				  ; THIS OR TO PUT 1 IN PORTB
	STR  R6, [R5]					  ; TO PUT THE VALUE BACK IN RCC REGISTER
	
;SETPUT THE PIN AS INPUT OR OUTPUT

	LDR  R5, =A_GPIO_PORTA_CRH_ADDRESS_REG  ;LOAD THE ADDRESS OF THE CONTROL REGISTER IN R5
	LDR  R6, [R5]                         ; PUT THE VALUE IN CONTROL REGISTER IN R6
	MOV  R7, #0X0000000F       			  ; MAKING THE MASKING STEP
	
	LSL  R1, R1, #2 					  ;MULTUPLY THE REG BY 4
	
	LSL  R7, R7, R1						  ; MOVE THE F ACCRODING THE WANTED PIN
	MVN  R7, R7	  						  ; MAKE THEM ALL F EXCEPT THE WANTED BITS
	
	AND  R6, R6, R7						  ; DO THE MASKING FOR R6
	
	LSL  R2, R2, R1						  ; SHIF THE BITS TO THE WANTED ONES
	ORR  R6, R6, R2                       ; INSERT THE WANTED BITS FOR THE CORESSPONDING PIN
	
	STR  R6, [R5]                         ; PUT THE VALUE BACK IN THE REGISTER

;ACTIVATION THE PULLUP
; INCASE IT IS INPUT IN WILL WORK CORRECTLY 
; INCASE IT IS OUTPUT IT WILL NOT AFFECT

	LDR   R5, =A_GPIO_PORTA_ODR_ADDRESS_REG   ;LOAD THE ADDRESS OF PORTB ODR IN R5
	LDR   R6, [R5]                            ;LOAD THE VALUE OF PORTB ODR IN R6	
	LSR   R1, R1, #2						  ;DIVID THE VALUE IN R1 BY 4
	MOV   R7, #1
	LSL   R7, R7, R1
	LSL   R7, R7, #8
	ORR   R6,R6,R7                             ;INSERT THE VALUE IN R6 
	STR R6, [R5]                          ;PUT BACK THE VALUE IN R6 IN THE ODR REGISTER	
	POP{R5-R8,PC}
	ENDFUNC


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;








;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DESCRIPTION 	
; THIS FUNCTION IS WRITE HIGH OR LOW ON THE WANTED BIN IN PORTB
; TO USE THIS FUCTION CORRECTLY YOU HAVE TO SEND THE FOLLOWING
;   1- R3 ---> THE WANED PIN
;   FROM THE ABOVE MACROS
;   2- R4 --->  THE VALUE 
;    IT SHOULD BE EITHER HIGH OR LOW
; IN THIS FUNCTION I AM GOING TO USE R5, R6, R7 AND R8

GPIO_PORTA_WRITE_PIN    FUNCTION
	PUSH{R5-R8,LR}

	
	LDR  R5, =A_GPIO_PORTA_ODR_ADDRESS_REG   ;LOAD THE ADDRESS OF THE ODR PORTB IN R5
	LDR  R6, [R5]                          ; PUT THE VALUE IN RCC REGISTER IN R6
    
	ADD  R3, #8
	LSL  R4, R4, R3						   ; SHIFTING THE WANTED VALUE TO CORRESPONDING BIT
	
	
;TO MAKE SURE THAT THERE IS NO VALUE IN THE WANTED BIT
	MOV R7, #1                             
	LSL R7, R7, R3
	MVN R7, R7
	AND R6, R6, R7
					
					
	ORR R6, R4								;INSERTING THE WANTED VALUE 
	
	
	STR R6, [R5]
	
	POP{R5-R8,PC}
	ENDFUNC	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;






;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DESCRIPTION 	
; THIS FUNCTION IS READ EITHER HIGH OR LOW ON THE WANTED BIN IN PORTB
; TO USE THIS FUCTION CORRECTLY YOU HAVE TO SEND THE FOLLOWING
;   1- R11 ---> THE WANED PIN
;   FROM THE ABOVE MACROS
; THE RETURN VALUE WILL BE IN R12  
; IF THE VALUE IS 1--> HIGH   AND IF IT IS 0--> LOW
; IN THIS FUNCTION I AM GOING TO USE R5, R6, R7 AND R8

GPIO_PORTA_READ_PIN    FUNCTION
	PUSH{R5-R7,LR}

	LDR  R5, =A_GPIO_PORTA_IDR_ADDRESS_REG   ;LOAD THE ADDRESS OF THE ODR PORTB IN R5
	LDR  R6, [R5]                          ; PUT THE VALUE IN RCC REGISTER IN R6
	

;MASKING TO GET ONLY THE WANTED PIN	
	MOV  R7, #1								;PUT 1 IN THE R7
	LSL  R7, R7, R11							;MOVE 1 TO THE CORRESPONDING BIT 
	LSL  R7, R7, #8
	AND  R12, R6, R7							; GET THE VALUE OF THE WANTED PIN
	LSR  R12, R12, R11							; MAKE IT IN THE FIRST BIT IN R4
	
	LSR  R12, R12, #8
	POP{R5-R7,PC}
	ENDFUNC	




	EXPORT	GPIO_PORTA_CONGIGURATION
	EXPORT	GPIO_PORTA_READ_PIN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;





	END